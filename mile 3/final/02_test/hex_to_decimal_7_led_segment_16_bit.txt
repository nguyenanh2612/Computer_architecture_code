 data:   
    li x7, 0x2000
    li x6, 0x30247940
    sw x6, 0(x7)
    li x6, 0x78021219 
    sw x6, 4(x7)
    li x6, 0x1000
    sw x6, 8(x7)
 initial_display_hex: 
     li x7, 0x7020 
     li x8, 0x40404040
     sw x8, 0(x7)
     sw x8, 4(x7)
     
take_data: 
    li x7, 0x7800 
    li x8, 0x7000
    li x9, 0x10001
    li x10,0x1FFFF
update_data: 
    sw x0, 0(x7) 
    lw x6, 0(x7) 
check_data: 
    and x6,x6,x10
    sw x6, 0(x8) 
    lw x6, 0(x8)
    blt x9,x6, execution
    j update_data

execution: 
    lhu x8, 0(x7)
    li x16, 10000
    li x2 , 1000
    li x3, 100
    li x4, 10 
    li x5, 1
	
    andi x6, x6, 0
    andi x7, x7, 0
    andi x9, x9, 0
    andi x10, x10, 0 
    andi x11, x11, 0
thouns_s: 
    bge x16,x8, thousand 
    sub x8,x8,x16  
    add x6,x6,x5
    j thouns_s
thousand: 
    bge x2, x8, hundred
    sub x8,x8,x2   
    add x7,x7,x5
    j thousand
hundred: 
    bge x3,x8, decimal
    sub x8,x8,x3   
    add x9,x9,x5
    j hundred
decimal: 
    bge x4,x8, final
    sub x8, x8, x4
    add x10,x10,x5
    j decimal
final: 
    beq x8,x0, translate_display
    sub x8,x8,x5
    add x11,x11,x5
    j final
    
translate_display:
    li x1, 0x2000
    add x8, x1,x6
    
    add x8, x1,x6
    lbu x6, 0(x8)
    
    add x8, x1,x7
    lbu x7, 0(x8)
    
    add x8, x1,x9
    lbu x9, 0(x8)
    
    add x8,x1,x10
    lbu x10, 0(x8)
    
    add x8,x1,x11
    lbu x11, 0(x8)
    
    li x1, 0x7020
    
    sb x7, 3(x1) 
    sb x9, 2(x1) 
    sb x10, 1(x1)
    sb x11, 0(x1)
    sb x6, 4(x1) 
test: 
    j test
     

